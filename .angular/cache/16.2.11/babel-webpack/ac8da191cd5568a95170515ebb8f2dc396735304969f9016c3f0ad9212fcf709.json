{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CurrentExchangeRate {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = \"e13b84da86ec8d77f15acf0b\";\n  }\n  CurrentRate() {\n    const url = `https://v6.exchangerate-api.com/v6/${this.apiKey}/latest/UAH`;\n    try {\n      return this.http.get(url).pipe(map(data => {\n        let conversionRates = data['conversion_rates'];\n        const selectedCurrencies = ['USD', 'EUR', 'PLN', 'GBP'];\n        // �������� ������ ������\n        const selectedConversionRates = {};\n        selectedCurrencies.forEach(currency => {\n          selectedConversionRates[currency] = conversionRates[currency];\n        });\n        // �������� ���������     \n        const inverseConversionRates = {};\n        Object.entries(selectedConversionRates).forEach(([currency, rate]) => {\n          inverseConversionRates[currency] = 1 / rate;\n        });\n        return inverseConversionRates;\n      }));\n    } catch (error) {\n      console.error(\"������ ����� �����:\", error);\n      throw error;\n    }\n  }\n  static #_ = this.ɵfac = function CurrentExchangeRate_Factory(t) {\n    return new (t || CurrentExchangeRate)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CurrentExchangeRate,\n    factory: CurrentExchangeRate.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CurrentExchangeRate };","map":{"version":3,"names":["map","CurrentExchangeRate","constructor","http","apiKey","CurrentRate","url","get","pipe","data","conversionRates","selectedCurrencies","selectedConversionRates","forEach","currency","inverseConversionRates","Object","entries","rate","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Andres\\VS22\\TestCurrencyExchange\\src\\app\\services\\CurrentExchangeRate.service.ts"],"sourcesContent":["import { Injectable, Input } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrentExchangeRate {\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    apiKey: string = \"e13b84da86ec8d77f15acf0b\";\r\n\r\n    CurrentRate() {\r\n        const url = `https://v6.exchangerate-api.com/v6/${this.apiKey}/latest/UAH`;\r\n\r\n        try {\r\n            return this.http.get(url).pipe(map((data: any) => {\r\n                let conversionRates = data['conversion_rates'];\r\n                const selectedCurrencies = ['USD', 'EUR', 'PLN', 'GBP'];\r\n\r\n                // �������� ������ ������\r\n                const selectedConversionRates: { [key: string]: number } = {};\r\n                selectedCurrencies.forEach(currency => {\r\n                    selectedConversionRates[currency] = conversionRates[currency];\r\n                });\r\n\r\n                // �������� ���������     \r\n                const inverseConversionRates: { [key: string]: number } = {};\r\n                Object.entries(selectedConversionRates).forEach(([currency, rate]) => {\r\n                    inverseConversionRates[currency] = 1 / rate;\r\n                });\r\n\r\n                return inverseConversionRates;\r\n            }));\r\n        }\r\n        catch (error) {\r\n            console.error(\"������ ����� �����:\", error);\r\n            throw error;\r\n        }\r\n\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAEpC,MAGaC,mBAAmB;EAE5BC,YACYC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAGhB,KAAAC,MAAM,GAAW,0BAA0B;EAFvC;EAIJC,WAAWA,CAAA;IACP,MAAMC,GAAG,GAAG,sCAAsC,IAAI,CAACF,MAAM,aAAa;IAE1E,IAAI;MACA,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAACR,GAAG,CAAES,IAAS,IAAI;QAC7C,IAAIC,eAAe,GAAGD,IAAI,CAAC,kBAAkB,CAAC;QAC9C,MAAME,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAEvD;QACA,MAAMC,uBAAuB,GAA8B,EAAE;QAC7DD,kBAAkB,CAACE,OAAO,CAACC,QAAQ,IAAG;UAClCF,uBAAuB,CAACE,QAAQ,CAAC,GAAGJ,eAAe,CAACI,QAAQ,CAAC;QACjE,CAAC,CAAC;QAEF;QACA,MAAMC,sBAAsB,GAA8B,EAAE;QAC5DC,MAAM,CAACC,OAAO,CAACL,uBAAuB,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAEI,IAAI,CAAC,KAAI;UACjEH,sBAAsB,CAACD,QAAQ,CAAC,GAAG,CAAC,GAAGI,IAAI;QAC/C,CAAC,CAAC;QAEF,OAAOH,sBAAsB;MACjC,CAAC,CAAC,CAAC;KACN,CACD,OAAOI,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;;EAGnB;EAAC,QAAAE,CAAA,G;qBApCQpB,mBAAmB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBzB,mBAAmB;IAAA0B,OAAA,EAAnB1B,mBAAmB,CAAA2B,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAET5B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}