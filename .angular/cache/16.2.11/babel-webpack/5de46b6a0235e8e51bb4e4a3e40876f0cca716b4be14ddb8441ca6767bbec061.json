{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CurrencyPair {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = \"e13b84da86ec8d77f15acf0b\";\n  }\n  CurrentPair(firstCurr, secondCurr, amount) {\n    const url = `https://v6.exchangerate-api.com/v6/${this.apiKey}/pair/${firstCurr}/${secondCurr}/${amount}`;\n    try {\n      return this.http.get(url).pipe(map(data => {\n        let convert = data['conversion_result'];\n        return convert.ToFixed(2);\n      }));\n    } catch (error) {\n      console.error(\"������ ����� �����:\", error);\n      throw error;\n    }\n  }\n  static #_ = this.ɵfac = function CurrencyPair_Factory(t) {\n    return new (t || CurrencyPair)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CurrencyPair,\n    factory: CurrencyPair.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CurrencyPair };","map":{"version":3,"names":["map","CurrencyPair","constructor","http","apiKey","CurrentPair","firstCurr","secondCurr","amount","url","get","pipe","data","convert","ToFixed","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Andres\\VS22\\TestCurrencyExchange\\src\\app\\services\\CurrencyPair.service.ts"],"sourcesContent":["import { Injectable, Input } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrencyPair {\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    apiKey: string = \"e13b84da86ec8d77f15acf0b\";\r\n\r\n    CurrentPair(firstCurr: string, secondCurr: string, amount: number) {\r\n        const url = `https://v6.exchangerate-api.com/v6/${this.apiKey}/pair/${firstCurr}/${secondCurr}/${amount}`;\r\n\r\n        try {\r\n            return this.http.get(url).pipe(map((data: any) => {\r\n                let convert = data['conversion_result'];\r\n\r\n                return convert.ToFixed(2);\r\n            }));\r\n        }\r\n        catch (error) {\r\n            console.error(\"������ ����� �����:\", error);\r\n            throw error;\r\n        }\r\n\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAEpC,MAGaC,YAAY;EAErBC,YACYC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAGhB,KAAAC,MAAM,GAAW,0BAA0B;EAFvC;EAIJC,WAAWA,CAACC,SAAiB,EAAEC,UAAkB,EAAEC,MAAc;IAC7D,MAAMC,GAAG,GAAG,sCAAsC,IAAI,CAACL,MAAM,SAASE,SAAS,IAAIC,UAAU,IAAIC,MAAM,EAAE;IAEzG,IAAI;MACA,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAACX,GAAG,CAAEY,IAAS,IAAI;QAC7C,IAAIC,OAAO,GAAGD,IAAI,CAAC,mBAAmB,CAAC;QAEvC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC;KACN,CACD,OAAOC,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;;EAGnB;EAAC,QAAAE,CAAA,G;qBAvBQhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFT;EAAM;;SAETxB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}